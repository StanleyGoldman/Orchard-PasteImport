using System;
using System.IO;
using System.Web.Mvc;
using Contrib.PasteImport.ViewModels;
using Orchard;
using Orchard.ImportExport;
using Orchard.ImportExport.Services;
using Orchard.Localization;
using Orchard.UI.Notify;

namespace Contrib.PasteImport.Controllers
{
    public class AdminController : Controller
    {
        private readonly IImportExportService _importExportService;

        public AdminController(IOrchardServices services, IImportExportService importExportService)
        {
            _importExportService = importExportService;
            Services = services;
            T = NullLocalizer.Instance;
        }

        public IOrchardServices Services { get; private set; }
        public Localizer T { get; set; }

        public ActionResult Paste()
        {
            var viewModel = new PasteImportViewModel();

            return View(viewModel);
        }

        [HttpPost, ActionName("Paste"), ValidateInput(false)]
        public ActionResult PastePOST(PasteImportViewModel pasteImportViewModel)
        {
            if (ModelState.IsValid)
            {
                if (!Services.Authorizer.Authorize(Permissions.Import, T("Not allowed to import.")))
                    return new HttpUnauthorizedResult();

                var recipeOutline = "<Orchard><Recipe><Name>Generated by Contrib.PasteImport</Name><Author>{0}</Author></Recipe>{1}</Orchard>";
                var recipe = string.Format(recipeOutline, Services.WorkContext.CurrentUser.UserName, pasteImportViewModel.RecipeSteps);

                _importExportService.Import(recipe);
                Services.Notifier.Information(T("Your recipe has been imported."));
            }

            return RedirectToAction("Paste");
        }
    }
}